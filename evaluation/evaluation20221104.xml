<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>Technologie-Evaluierung von Drehgebern und deren Anbindung an eine Java-basierte Potiboard-App</title>
<date>08.11.2022</date>
<author>
<personname>
<firstname>Achim</firstname>
<othername>Bloch-Späth</othername>
<surname>&lt;a.bloch-spaeth@gsi.de&gt;, Martin Stein &lt;m.stein@gsi.de&gt;</surname>
</personname>
<email>a.bloch-spaeth@gsi.de, m.stein@gsi.de</email>
</author>
<authorinitials>AB&</authorinitials>
<revhistory>
<revision>
<revnumber>v1.1</revnumber>
<date>08.11.2022</date>
<authorinitials>AB&</authorinitials>
</revision>
</revhistory>
</info>
<chapter xml:id="_einbindung_dieser_arbeit_in_das_laufende_projekt_fcc_digital_potiboard">
<title>Einbindung dieser Arbeit in das laufende Projekt FCC Digital Potiboard</title>
<simpara>Die hier beschriebene Technologie-Evaluierung dient als Grundlage zur Entscheidungsfindung zu den in der <link linkend="figure-1">Abbildung: Status FCC Digital Potiboard </link> markierten <emphasis>Major Milestones</emphasis> und <emphasis>Subprojects / Tasks</emphasis>.</simpara>
<figure xml:id="figure-1">
<title>Status FCC Digital Potiboard</title>
<mediaobject>
<imageobject>
<imagedata fileref="common/img/potiboard-status-20220708.png" align="center"/>
</imageobject>
<textobject><phrase>Status-Project</phrase></textobject>
</mediaobject>
</figure>
</chapter>
<chapter xml:id="_rückblick_und_motivation">
<title>Rückblick und Motivation</title>
<simpara>Der vor ca. 6 Jahren entwickelte Potiboard-Prototyp wurde in einem vorhergehenden Potiboard-Meeting als unzureichend in seiner Technologieauswahl eingestuft.
Insbesondere der Einsatz der "closed source library" des damals benutzten Phidget-Mikrocontroller, der zur Verarbeitung der Encodersignale dient, wurde als kritisch eingestuft.
Die benötigte Bibliothek des Phidget läuft zudem nicht im "Userspace" auf Linux, was aus system-administrativer Sicht ein Nachteil ist.</simpara>
<simpara>Die damaligen Anforderungen wurden beim <link linkend="figure-1">alten Potiboard-Prototyp</link> über eine hohe Integration der beteiligten Komponenten gelöst.
Drehgeber, wie Potiboard-App, gesteuert über einen Touchscreen, befanden sich in einem Gehäuse mit Netzwerkanschluss, über den der Gerätezugriff direkt über <literal>JAPC</literal> erfolgte.</simpara>
<informalfigure xml:id="figure-2">
<mediaobject>
<imageobject>
<imagedata fileref="common/img/old-potiboard-prototype.png" align="center"/>
</imageobject>
<textobject><phrase>Old potiboard prototype</phrase></textobject>
</mediaobject>
</informalfigure>
</chapter>
<chapter xml:id="_skizze_des_neuen_potiboard_encoder_device">
<title>Skizze des neuen Potiboard-Encoder-Device</title>
<informalfigure xml:id="figure-22">
<mediaobject>
<imageobject>
<imagedata fileref="common/img/potiboard-skizze.png" align="center"/>
</imageobject>
<textobject><phrase>New potiboard sketch</phrase></textobject>
</mediaobject>
</informalfigure>
<blockquote>
<title>Funktionsüberblick aus der Spezifikation</title>
<attribution>
Spezifikation: F-FO-CMD-en-0009_DS_Potiboard_v4_inprogress.docx
</attribution>
<itemizedlist>
<listitem>
<simpara>Button functions are:</simpara>
<itemizedlist>
<listitem>
<simpara>scroll back and forth (per button press by 4 devices to the right or left. In case of individual assignment, move one device to the right or left)</simpara>
</listitem>
<listitem>
<simpara>deactivate the encoders (deactivation deselects all devices and triggers the LSA data supply)</simpara>
</listitem>
<listitem>
<simpara>change the parameter view &#8658; volts, BRHO et cetera</simpara>
</listitem>
<listitem>
<simpara>activate and deactivate the master mode (first partner knob controls both devices, second (third, fourth) partner is ignored</simpara>
</listitem>
<listitem>
<simpara>change the increment</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</blockquote>
</chapter>
<chapter xml:id="_vom_alten_potiboard_prototyp_übernommende_technologieentscheidungen_und_neue_wege">
<title>Vom alten Potiboard-Prototyp übernommende Technologieentscheidungen und neue Wege</title>
<itemizedlist>
<listitem>
<simpara>Optische "Rotary Quadrature Encoder" wurden wieder, wie beim alten Prototypen, wegen ihrer Signalqualität, Zuverlässigkeit und Verfügbarkeit eingesetzt. Auf kugelgelagerte Modelle wurde diesmal verzichtet (Haptikgründe wegen zu hoher Leichtgängigkeit).
Andere aktuelle Auswahlkriterien sind Modelle mit 32-128 Pulsen pro 360-Rotation, keine Zahnung und auf 5 V ausgelegte Signalverarbeitung. 3.3V Modelle, die alle anderen Kriterien auch erfüllen, waren in den letzten Wochen nicht lieferbar.</simpara>
<itemizedlist>
<listitem>
<simpara>Getestete-Encoder sind:</simpara>
<itemizedlist>
<listitem>
<simpara>Grayhill 63R128, Stückpreis: 100 $</simpara>
</listitem>
<listitem>
<simpara>Bourns ENA1J-B28-L00128L, Stückpreis:60 $, gleiches Modell wie beim alten Prototypen.</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>Durch den Einsatz von modernen Mikrocontrollern, deren Spannung an ihren I/O Kanälen häufig auf 3,3 V limitiert ist (anstatt 5V), schränkt sich dich Auswahl der möglichen Endcoder-Modelle deutlich ein. Eventuell müssten die Encoder-Ausgangsspannungen an den Eingängen der Mikrocontroller mit Pegelumsetzern (Level-Shifter) angepasst werden, wenn aus Gründen von Lieferschwierigkeiten 5 V Encoder-Modelle eingesetzt werden müssen.</simpara>
<itemizedlist>
<listitem>
<simpara>Es wurden neue Mikrokontroller evaluiert, die die Inkremente der bis zu acht (8!) Encoder, ohne spürbare Zeitverzögerung, weiterverarbeiten können sollen. Statt des im alten Prototypen verwendeten Phidget-Mikrocontroller (1047_1), wurden folgende Mikrocontroller stattdessen in die Auswahl genommen:</simpara>
<itemizedlist>
<listitem>
<simpara>Raspberry Pi 4, Stückpreis: 70 $</simpara>
</listitem>
<listitem>
<simpara>STM32H7, STM32F7, Stückpreis: 70 $</simpara>
</listitem>
<listitem>
<simpara>Teensy 4.1 (Arduino kompatibel), Stückpreis: 40 $</simpara>
</listitem>
<listitem>
<simpara>Raspberry Pi Pico, Stückpreis: 8 $</simpara>
</listitem>
</itemizedlist>
</listitem>
</itemizedlist>
<simpara>Alle diese Mikrokontroller sind verbreitete Modellarten (Ersatzteilversorgung scheint vorerst gesichert) und lassen sich mit Open-Source Software betreiben.
Der Mikrocontroller-Code zur Weiterverarbeitung der Encoder-Inkremente muss in C, Python oder Assembler geschrieben und gewartet werden. Das gleiche gilt für die verschiedenen Übertragungstechnologien zur der Java-basierten Potiboard-Applikation, wenn keine zusätztliche Rechnerschicht eingeführt wird.</simpara>
</chapter>
<chapter xml:id="_generelle_hardware_komponenten_architekturüberlegungen">
<title>Generelle Hardware-Komponenten-Architekturüberlegungen</title>
<section xml:id="_komponentengruppen">
<title>Komponentengruppen</title>
<informalfigure xml:id="figure-3">
<mediaobject>
<imageobject>
<imagedata fileref="common/img/general-topology.svg" align="center"/>
</imageobject>
<textobject><phrase>Generelle Komponenten</phrase></textobject>
</mediaobject>
</informalfigure>
</section>
<section xml:id="_inkrementzähler_übertragung_über_netzwerk_oder_usb">
<title>Inkrementzähler-Übertragung über Netzwerk oder USB</title>
<informaltable frame="none" rowsep="0" colsep="0">
<tgroup cols="2">
<colspec colname="col_1" colwidth="50*"/>
<colspec colname="col_2" colwidth="50*"/>
<tbody>
<row>
<entry align="right" valign="top"><informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="common/img/komponenten-uml-02.svg"/>
</imageobject>
<textobject><phrase>Network</phrase></textobject>
</mediaobject>
</informalfigure></entry>
<entry align="left" valign="top"><informalfigure>
<mediaobject>
<imageobject>
<imagedata fileref="common/img/komponenten-uml-03.svg"/>
</imageobject>
<textobject><phrase>USB</phrase></textobject>
</mediaobject>
</informalfigure></entry>
</row>
</tbody>
</tgroup>
</informaltable>
<simpara><?asciidoc-pagebreak?></simpara>
<caution>
<title>USB Nachteil</title>
<simpara>USB ist auf eine <emphasis role="strong">maximale Kabellänge</emphasis> von 5m spezifiziert. Mit guten Kabel und/oder Repeatern sind vielleicht bis zu 10m möglich.</simpara>
</caution>
<note>
<title>USB Vorteil</title>
<simpara>USB ist schneller als die Netzwerkübertragung, insbesondere bei der Übertragung von kleinen Datenpaketen.
Die USB-Protokolle haben keinen Adressierungs-Overhead.
Vieles ist dadurch einfacher, z.B. müssen Sender (Potiboard) und Empfängeradresse (Potiboard-App) nicht konfigurierbar programmiert werden.</simpara>
</note>
<note>
<title>USB Vorteil</title>
<simpara>USB liefert out of the box ausreichend Strom für Drehgeber und Mikroprozessor. Beim Netzwerk müßte zusätzliche Hardware (z.B. PoE) hinzugefügt werden, wenn ein Stromnetz-Anschluss vermieden werden soll (USB nur zum Stromanschluss ginge natürlich auch).</simpara>
</note>
</section>
</chapter>
<chapter xml:id="_netzwerkbasierte_system_architekturen_und_technologien">
<title>Netzwerkbasierte System-Architekturen und Technologien</title>
<section xml:id="_testsystem_mit_spring_webflux">
<title>Testsystem mit <literal>Spring Webflux</literal></title>
<figure xml:id="figure-4">
<title>UML-Komponenten Diagram Netzwerkübertragung with <literal>Spring Webflux</literal></title>
<mediaobject>
<imageobject>
<imagedata fileref="common/img/komponenten-uml-01.svg" contentwidth="300" contentdepth="600" align="center"/>
</imageobject>
<textobject><phrase>New Reference Implementation</phrase></textobject>
</mediaobject>
</figure>
<figure xml:id="figure-5">
<title>Test-Implementation 1</title>
<mediaobject>
<imageobject>
<imagedata fileref="common/img/potiboard_network_01.svg" align="center"/>
</imageobject>
<textobject><phrase>Reference Implementation Network</phrase></textobject>
</mediaobject>
</figure>
<simpara>Es wurde ein Referenzsystem, wie im oberen Bild dargestellt, auf Basis eines Teensy 4.1 Mikrocontrollers entwickelt, der die Inkremente der Encoder in hoher Geschwindigkeit bis in eine Beispiel-JavaFX-Applikation weiterreicht.</simpara>
<informalexample>
<simpara>Die im Referenzsystem eingesetzte Datenübermittlungstechnologie basiert auf der Technologie <literal>Spring Webflux</literal> und dem "Reactive Toolkit" <literal>Project Reactor</literal>. Sie wurde ausgewählt, da sie der "GSI Controls Applicationsservice-Technologieauswahl" entspricht, die für die Operating-Applikationen im FCC und HKR eingesetzt werden soll und teilweise schon eingesetzt wird.</simpara>
</informalexample>
<simpara>Ein Nachteil und in mancherlei Hinsicht sicher auch Vorteil dieser Architektur ist die Einführung eines java-basierten <literal>Webflux</literal>-Servers (siehe Bild <literal>EncoderPositionsServerPC</literal>), der ein PC-System mit Controls-konformen OS sein sollte. Es ist also eine Schicht (<emphasis>Tier</emphasis>) notwendig, um die Inkremente der verschiedenen Encoder im <literal>WebFlux</literal>-Format zu versenden.</simpara>
<simpara>Auf der Habenseite dieser Architektur steht die Anpassbarkeit und Wartbarkeit nach den Richtlinien der Controls-Abteilung und damit eine sichere, kontrollierbare Netzwerkkommunikation im ACC-Netzwerk und keine Insellösung im ACC-Netz.</simpara>
<simpara>Die weiteren im Anschluss besprochenen netzwerkbasierenden Architekturen könnten den Einsatz eines weiteren Rechners, wie der des Konzentrator-PCs überflüssig machen. Die Instandhaltung des Rechners, so wie die Wartung des Betriebssytems (z.B. Rocky Linux), erzeugt wiederkehrende Kosten.</simpara>
</section>
<section xml:id="_testsysteme_mit_zeromq_und_mqtt">
<title>Testsysteme mit <literal>ZeroMQ</literal> und <literal>MQTT</literal></title>
<formalpara xml:id="figure-6">
<title>Test-Implementation 2</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="common/img/potiboard_network_02.svg"/>
</imageobject>
<textobject><phrase>Simpler Network and System Architecture</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
<simpara>Ein Kanditat für eine einfachere Architektur ist zum Beispiel die Technologie <literal>ZeroMQ</literal>, die sich mit einem Raspberry Pi 4, wie getestet, leicht umsetzen läßt.</simpara>
<simpara>Sehr interessant ist auch die <literal>MQTT</literal>-Technologie, die allerdings die Notwendigkeit des Aufsetzens eines <literal>MQTT</literal>-Servers nach sich ziehen würde und somit den Vorteil der Kostenersparnis zumindestens teilweise wieder verliert.</simpara>
</section>
</chapter>
<chapter xml:id="_usb_basierte_system_architekturen_und_technologien">
<title>USB-basierte System-Architekturen und Technologien</title>
<section xml:id="_testsystem_mit_usb_serial">
<title>Testsystem mit USB-Serial</title>
<formalpara>
<title>Mikroprozessor-Seite</title>
<para>Die USB-Serial Übertragung wurde hauptsächlich vom Mikroprozessor Teensy 4.1 aus getestet, da dieser auch für den netzwerk-basierten Test mit <literal>Spring Webflux</literal> zum Einsatz kam. Es wurde die Standard Arduino Bibliotek <literal>Arduino.h</literal> für das Schreiben auf der USB-seriellen Schnittstelle eingesetzt.</para>
</formalpara>
<formalpara>
<title>Java-Applikationsseite</title>
<para>Es wurde die gut gepflegte und verbreitete Java-Bibliothek <link xl:href="https://fazecast.github.io/jSerialComm/">jSerialComm</link> genutzt um die seriellen Datenpakete in der Potiboard-Applikation zu empfangen.</para>
</formalpara>
<formalpara>
<title>Administration, Konfiguration</title>
<para>Administrationsaufwand ergibt sich für die Java-Applikationsseite auf Linux-Systemen, z.B. auf den <literal>tcl1000</literal>-Maschinen, durch die Notwendigkeit einer Gruppenrechtevergabe für den <literal>user</literal>, um unter Linux Zugriffrechte auf die Serielle Schnittstelle zu bekommen.</para>
</formalpara>
<programlisting language="ruby" linenumbering="unnumbered">sudo usermod -a -G uucp username
sudo usermod -a -G dialout username
sudo usermod -a -G lock username
sudo usermod -a -G tty username</programlisting>
<simpara>Zusätzlich wird auf dem Host-Rechner (z.B. auf den tcl1000-Maschinen) auf der Java-Applikationsseite eine C-Bibliothek benötigt, die die bei der Java-Bibliothek <link xl:href="https://fazecast.github.io/jSerialComm/">https://fazecast.github.io/jSerialComm/</link>[jSerialComm mitgeliefert wird.</simpara>
</section>
<section xml:id="_testsystem_mit_usb_hid">
<title>Testsystem mit USB-HID</title>
<formalpara>
<title>Mikroprozessor-Seite</title>
<para>Wieder kam der Teensy 4.1 zum Einsatz, diesmal mit einer Teensy-speziellen Bibliothek <link xl:href="https://github.com/PaulStoffregen/USBHost_t36/">USB Host Library for Teensy 3.6 and 4.0</link>. Mit dieser können USB-HID konform "Rohdaten" bis zu einer Länge von 64 Byte (pro Millisekunde) in einem Datenpaket übertragen und empfangen werden.</para>
</formalpara>
<formalpara>
<title>Java-Applikationsseite</title>
<para>Auf Java-Seite setzte sich eine sehr leichgewichtige Bibliothek durch, die <link xl:href="https://github.com/nyholku/purejavahidapi">Pure Java HIDApi</link>. Sie bekam den Vorzug zur <link xl:href="https://github.com/gary-rowe/hid4java">HID4Java</link>, die zusätzlich eine C-Bibliothek (z.B. auf den tcl1000-Maschinen) als Abhängigkeit benötigt.</para>
</formalpara>
<formalpara>
<title>Administration, Konfiguration</title>
<para>Administrationsaufwand ergibt sich für die Java-Applikationsseite auf Linux-Systemen (z.B. auf den <literal>tcl1000</literal>-Maschinen), die Notwendigkeit einer <literal>UDEV</literal>-Regel, z.B. in einer Datei <literal>66-hid-rules</literal> im Verzeichnis <literal>/etc/udev/rules.d</literal>:</para>
</formalpara>
<programlisting language="ruby" linenumbering="unnumbered">KERNEL=="hidraw*", ATTRS{idVendor}=="16c0", ATTRS{idProduct}=="042", MODE:="0666"
SUBSYSTEMS=="usb", ATTRS{idVendor}=="16c0", ATTRS{idProduct}=="042", MODE:="0666"</programlisting>
</section>
<section xml:id="_testsystem_mit_der_usb_midi">
<title>Testsystem mit der USB-MIDI</title>
<formalpara>
<title>Mikroprozessor-Seite</title>
<para>Auch hier kam der Mikroprozessor Teensy 4.1 in einem erfolgreichen Test zum Einsatz und wieder reichte, wie beim USB-Seriellen Weg, die Standard Arduino Bibliotek <literal>Arduino.h</literal>, diesmal für das Schreiben auf der USB-MIDI-Schnittstelle.</para>
</formalpara>
<formalpara>
<title>Java-Applikationsseite</title>
<para>Die Potiboard-Applikation kann die MIDI-Daten in ihrem Java-Code ohne zusätzliche Abhängigkeiten empfangen, MIDI wird direkt von der <literal>JRE</literal> unterstützt, ist enthalten in der <literal>Java Sound API</literal>.</para>
</formalpara>
<formalpara>
<title>Administration, Konfiguration</title>
<para>Keine Notwendigkeiten unter Linux.</para>
</formalpara>
<formalpara>
<title>Bemerkung</title>
<para>Möchte man mit MIDI Datentypen größer als zwei Byte in einem Datenpaket verschicken, müssen sogenannte <literal>Sysex</literal>, oder <literal>MIDI system exclusive messages</literal> benutzt werden.
Sie dienen normalerweise zur Konfiguration zwischen den MIDI-Geräten. Bei dieser Art von Nachrichten sind mehr als drei Byte Datenpaketlänge erlaubt.
Allerdings können in jedem übertragenen Byte nur 7 Bit genutzt werden (1 Bit ist ein Status-Bit), so dass Konvertierungen vom 8-Bit-System in 7-Bit-System und zurück sowohl auf Mikroprozessor-Seite (<literal>C</literal>), als auch auf Java-Applikationsseite notwendig sind. Dieser <literal>C</literal> und <literal>Java</literal>-Code wurde für den Test implementiert.</para>
</formalpara>
</section>
</chapter>
<chapter xml:id="_grundlegende_zentrale_anforderungen_stichwortliste">
<title>Grundlegende zentrale Anforderungen (Stichwortliste)</title>
<informalexample>
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; Komplexität, Lebensdauer und Wartbarkeit der <emphasis role="strong">Hardware</emphasis></simpara>
</listitem>
</itemizedlist>
<simpara>Die Funktion der eingesetzten Drehgeber und Mirkocontroller muss durch Verfügbarkeit am Markt oder durch Reserveteile-Einlagerung für möglichst mehrere Jahrzehnte mit finanziell überschaubarem Aufwand absicherbar sein. Komplexe Systeme oder eine hohe Anzahl von verschiedenen benötigten Hardwarekomponenten sollte wenn möglich vermieden werden.</simpara>
</informalexample>
<informalexample>
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; Komplexität, Lebensdauer und Wartbarkeit der <emphasis role="strong">Software</emphasis></simpara>
</listitem>
</itemizedlist>
<simpara>Die eingesetzte Software auf Mikrocontroller und auf Potiboard-Applikationsseite sollte aus möglichst gut gepflegten und verständlichen Open-Source Projekten mit hoher Verbreitung stammen. Dieser Punkt bestimmt u.a. die Wahl des Mikrocontrollers. Der notwendige selbst geschriebene Soure-Code sollte möglichst einfach wartbar sein. Auf dem Mikrocontroller kommen die Programmiersprachen Assembler, C und Python in Frage, auf der Potiboard-Applikationsseite werden Java-basierte Lösungen preferiert.</simpara>
</informalexample>
<informalexample>
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; <emphasis role="strong">Admin</emphasis>istrations-, Konfigurationsaufwand</simpara>
</listitem>
</itemizedlist>
<simpara>Der Aufwand für zusätzliche Hardware und Software, wie z.B. der KonzentratorPC für <literal>Webflux</literal> oder ein <literal>MQTT-Server</literal>(Linux-Administration, Hardwarepflege) oder zusätzliche Stromversorgungswege als auch der Aufwand für Konfigurationen (Netzwerk-Adressen-Pflege) sollte minimal gehalten werden. Unter diesen Punkt fallen auch notwendige Linux-Anpassungen z.B. auf den tcl1000 Rechnern für den HKR/FCC.</simpara>
</informalexample>
<informalexample>
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; <emphasis role="strong">Geschwindigkeit</emphasis> der Signalübertragung der Inkremente der Encoder</simpara>
</listitem>
</itemizedlist>
<simpara>Die Geschwindigkeit der Imkremente vom Nutzer über den Drehgeber zum Mikrocontroller und dann in das Java-Programm sollte zwischen max. bei 10 ms (100 Hz) liegen, besser deutlich niedriger.</simpara>
</informalexample>
<informalexample>
<itemizedlist mark="none">
<listitem>
<simpara>&#10003; <emphasis role="strong">Duplex</emphasis>-Signalübertragung, nicht nur für die Inkremente der Encoder in eine Richtung, sondern auch in der Gegenrichtung von der Portiboard-App zurück zum Potiboard-Encoder-Device.</simpara>
</listitem>
</itemizedlist>
<simpara>Um die Benutzererfahrung am Potiboard-Encoder-Device zu verbessern, sollte es technisch möglich sein, Informationen wie Status der Verbindung, oder auch Magnet-Nomenklaturen an das Potiboard-Encoder-Device zu übertragen.</simpara>
</informalexample>
</chapter>
<chapter xml:id="_tabelle_technologiebewertung">
<title>Tabelle Technologiebewertung</title>
<table frame="all" rowsep="1" colsep="1">
<title>Versuch der Einordnung der Stärken und Schwächen der verschiedenen Technologien</title>
<?dbhtml table-width="100%"?>
<?dbfo table-width="100%"?>
<?dblatex table-width="100%"?>
<tgroup cols="9">
<colspec colname="col_1" colwidth="64.9999*"/>
<colspec colname="col_2" colwidth="24.9997*"/>
<colspec colname="col_3" colwidth="29.9999*"/>
<colspec colname="col_4" colwidth="54.9996*"/>
<colspec colname="col_5" colwidth="49.9999*"/>
<colspec colname="col_6" colwidth="39.9997*"/>
<colspec colname="col_7" colwidth="85*"/>
<colspec colname="col_8" colwidth="39.9997*"/>
<colspec colname="col_9" colwidth="35.0013*"/>
<thead>
<row>
<entry align="left" valign="top">Eigenschaft / Technologie</entry>
<entry align="left" valign="top">USB</entry>
<entry align="left" valign="top">Netz-werk</entry>
<entry align="left" valign="top">Hardware</entry>
<entry align="left" valign="top">Software</entry>
<entry align="left" valign="top">Admin</entry>
<entry align="left" valign="top">Geschwindigkeit</entry>
<entry align="left" valign="top">Duplex</entry>
<entry align="left" valign="top">&#8721;*</entry>
</row>
</thead>
<tbody>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">Webflux</emphasis></simpara></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">X</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">*</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">*</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">***</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">  9</literallayout></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">MQTT</emphasis></simpara></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">X</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">*</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">*</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">*</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">***</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">  8</literallayout></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">ZeroMQ</emphasis></simpara></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">X</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">***</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"> 11</literallayout></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">Socket</emphasis></simpara></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">X</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">***</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"> 11</literallayout></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">USB-Serial</emphasis></simpara></entry>
<entry align="left" valign="top"><literallayout class="monospaced">X</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">***</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">***</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">*</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">***</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"> 12</literallayout></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">USB-HID</emphasis></simpara></entry>
<entry align="left" valign="top"><literallayout class="monospaced">X</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">***</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">**</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"> 11</literallayout></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">USB-MID</emphasis></simpara></entry>
<entry align="left" valign="top"><literallayout class="monospaced">X</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">***</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">***</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">***</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">*</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">*</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"> 11</literallayout></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">RS232/RS485</emphasis></simpara></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">-</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
</row>
<row>
<entry align="left" valign="top"><simpara><emphasis role="strong">MIDI (DIN)</emphasis></simpara></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced">-</literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
<entry align="left" valign="top"><literallayout class="monospaced"></literallayout></entry>
</row>
</tbody>
<tfoot>
<row>
<entry align="left" valign="top"></entry>
<entry align="left" valign="top" namest="col_2" nameend="col_9"><literallayout class="monospaced">X = gehört zu, - = ungenügend, * = ausreichend , ** = gut, *** = sehr gut</literallayout></entry>
</row>
</tfoot>
</tgroup>
</table>
<simpara>Die Tabelle dient nur als Diskussionsgrundlage für die verschiedenen Technologien. Für einen Vergleich wären die verschiedenen Eigenschaften (Spalten) zu gewichten. Die &#8721;* Spalte dient <emphasis role="strong">nicht</emphasis> zur objektiven Bewertung.</simpara>
</chapter>
<chapter xml:id="_fazit">
<title>Fazit</title>
<simpara>Wenn USB als Datenübertragungssystem für Potiboard-Prototypentwickungen vorerst als ausreichend bewertet wird, wäre der technische Vorschlag, für den ersten Protoypen die Encoder-Signale mit einem Arduino kompatiblen Mikrocontroller der Art Teensy 4.1 zu verarbeiten und von diesem aus die Inkrementzählerwerte über das USB-MIDI-Protokoll an die java-basierte Potiboard-Applikation weiterzuleiten.</simpara>
<important>
<simpara>Der Teensy 4.1 ist ein kosteneffizienter, gut verfügbarer und hoch performanter 600 MHz ARM Cortex M7 Mikrocontroller. Seine über die Arduino-IDE leicht einbindbaren Open-Source Bibliotheken sind verbreitet und gut unterstützt Die in den Tests eingesetzten Bibiotheken für Encoder sowie die USB-Serial-, USB-HID- und USB-Midi Bibliotheken funktionierten schnell und problemlos.</simpara>
</important>
<important>
<simpara>Das USB-Midi Protokoll bietet als einzige USB-Datenübertragungstechnologie echtes Plug-and-Play an einem Linux-basierten Host (wie z.B. tcl1000).
Auf der Java-Seite, also bei der Entwicklung und Wartung der Potiboard-Applikation, wird MIDI direkt von der <literal>JRE</literal> unterstützt durch die <literal>Java Sound API</literal>. Es werden auf absehbare Zeit keine zusätzlichen Bibliotheken oder Abhängigkeiten einzubinden sein.
Diesen Vorteilen stehen gegenüber eine leicht erhöhte Komplexität bei der Programmierung der Übertragungsdatenpakete und eine niedrigere aber noch ausreichende Datenübertragungsrate.</simpara>
</important>
<simpara>Wenn USB als Datenübertragungssystem als möglicherweise nicht ausreichend bewertet wird, müsste die Evaluierung der netzwerk-basierten Technologien weitergeführt werden.
Eine rein <emphasis>socket-basierte</emphasis> Verbindung von einem netzwerk-fähigen Mikrocontroller zur java-basierten Potiboard-Applikation wäre ein begehbarer Weg. Möglich wäre sicher auch die auf das <emphasis>ZeroMQ-Messaging</emphasis> basierende Übertragung zwischen Mikrokontroller und der Potiboard-Applikation..</simpara>
<formalpara role="center">
<title>Dankeschön!</title>
<para><inlinemediaobject>
<imageobject>
<imagedata fileref="common/img/teensy_on_table.png" contentwidth="450" contentdepth="200"/>
</imageobject>
<textobject><phrase>Ciao</phrase></textobject>
</inlinemediaobject></para>
</formalpara>
</chapter>
<chapter xml:id="_themen_die_zur_evaluierung_beigetragen_haben_aber_nicht_tiefer_diskutiert_werden_stichpunktartig">
<title>Themen, die zur Evaluierung beigetragen haben, aber nicht tiefer diskutiert  werden (stichpunktartig)</title>
<itemizedlist>
<listitem>
<simpara>GPS-System zur Uhrensynchronisation für Zeitmessungen mit ~  30 &#181;s Genauigkeit.</simpara>
</listitem>
<listitem>
<simpara>Arithmetische Kodierung mit 7-Bit pro Byte zur Darstellung von Datentypengrößen größer als 7 Bit (&gt;127) (MIDI-speziell).</simpara>
</listitem>
<listitem>
<simpara>Nutzung der <literal>State Machine</literal> für die GPIO-Kommunikation ohne CPU-Interrupts beim Raspberry PI Nano.</simpara>
</listitem>
</itemizedlist>
</chapter>
</book>